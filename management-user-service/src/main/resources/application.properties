
spring.security.oauth2.client.registration.google.client-id=1097130513649-4k1g7q1ltbo8rt1hfvsmp16q13ncf9mu.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=LZSU1HyFqchGZh9WA3mJcUDW
spring.security.oauth2.client.registration.google.scope.=https://www.googleapis.com/auth/userinfo.email, https://www.googleapis.com/auth/userinfo.profile
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/oauth2/callback/google
#spring.security.oauth2.client.registration.google.redirect-uri-template="{baseUrl}/oauth2/callback/{registrationId}"


spring.security.oauth2.client.registration.facebook.client-id=2379985835441157
spring.security.oauth2.client.registration.facebook.client-secret=e2b1b6d3d9ffd4cb4593f155142a701c
spring.security.oauth2.client.registration.facebook.scope.=public_profile,email
spring.security.oauth2.client.registration.facebook.redirect-uri=http://localhost:8080/oauth2/callback/facebook
#spring.security.oauth2.client.registration.facebook.redirect-uri-template="{baseUrl}/oauth2/callback/{registrationId}"


spring.security.oauth2.client.provider.facebook.authorizationUri=https://www.facebook.com/v3.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.tokenUri= https://graph.facebook.com/v3.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.userInfoUri= https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)



spring.application.name=management-user-service
server.port=8004

#datasource
spring.datasource.url=jdbc:mysql://localhost:3306/management_user1?useUnicode=true&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=true
#you should change them according to your credentials.
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#disable hibernate auto ddl changes
spring.jpa.hibernate.ddl-auto=none

#liquibase
spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.hibernate.ddl-auto = update
#spring.jpa.show-sql=true
#spring.jpa.hibernate.naming-strategy= org.hibernate.cfg.ImprovedNamingStrategy


#eureka
eureka.client.service-url.default-zone=http://localhost:8761/eureka/
#indicates the frequency the client sends heartbeats to server to indicate that it is alive.
eureka.instance.lease-renewal-interval-in-seconds=30
#indicates the duration the server waits since it received the last heartbeat before it can evict an instance from its registry.
eureka.instance.lease-expiration-duration-in-seconds=90

#load balancing
ribbon.eureka.enabled=true

##management.security.enabled=false
#app.auth.tokenSecret= 926D96C90030DD58429D2751AC1BDBBC
#app.auth.tokenExpirationMsec= 864000000
#app.oauth2.authorizedRedirectUris=http://localhost:4200/oauth2/redirect

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

#management.security.enabled=false
app.auth.tokenSecret= 926D96C90030DD58429D2751AC1BDBBC
app.auth.tokenExpirationMsec= 864000000
#app.oauth2.authorizedRedirectUris=http://localhost:4200/oauth2/redirect
